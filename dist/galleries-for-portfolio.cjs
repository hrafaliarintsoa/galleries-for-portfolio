"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const o=require("path"),y=require("image-size"),h=require("sharp"),m=require("node:fs");async function D(e){console.log("Optimizing images....");try{await Promise.all(e.galleries.map(async a=>{const i=o.join(e.imagesDir,a),r=await m.promises.readdir(i),n=o.join(i+"");await T(r,a,e);const t=await m.promises.readdir(i);await $(n),await v(n),await b(o.join(n,"/optimized")),await b(o.join(n,"/thumbnails")),await Promise.all(t.map(async l=>{if(p(l)){const g=o.join(i,l),u=z(l,e),d=o.join(i+"/optimized",w(u)),j=o.join(i+"/thumbnails",w(u));await S(g,d,e),await I(g,j,e)}}));const s=await F(z(t,e),i,a,e),c=JSON.stringify(s,null,2);await m.promises.writeFile(o.join(i,"images.json"),c)})),await C(e)}catch(a){console.error("Error optimizing images:",a)}}function z(e,a){if(Array.isArray(e)&&e.length)return e.map(r=>{if(!p(r))return r;let n=r;return a.renameOptions.charsToRename.forEach(t=>{n=n.replace(t,a.renameOptions.renameBy)}),n});if(!p(e))return e;let i=e;return a.renameOptions.charsToRename.forEach(r=>{i=i.replace(r,a.renameOptions.renameBy)}),i}function p(e){const a=o.extname(e);return a===".jpg"||a===".jpeg"||a===".png"}function w(e){return e.replace(o.extname(e),".webp")}async function f(e){return console.log(`Getting image size for ${e}`),new Promise((a,i)=>{y(e,(r,n)=>{r?i(r):a(n)})})}async function F(e,a,i,r){console.log(`Creating image objects for ${i}`);const n=[];for(const t of e)if(p(t)){const s=o.join(a,"thumbnails",t),c=o.join(a,"optimized",t),l=O({},i),g=await f(c.replace(".jpg",".webp")),u=await f(s.replace(".jpg",".webp"));let d=!1;u.width&&u.height&&(d=u.height>u.width);const j=i.includes("home-")?P(t,i,r):i;n.push({name:t.replace(".jpg",""),path:o.join(r.imagesAssetsDir,i,"optimized",w(t)),thumbnailPath:o.join(r.imagesAssetsDir,i,"thumbnails",w(t)),thumbnailDimensions:u,optimizedDimensions:g,portrait:d,galleryId:j,file:t.replace(".jpg",""),alt:l,parentId:i})}return n}function P(e,a,i){const n=i.galleries.map(t=>o.join(i.imagesDir,t,"optimized",e.replace(".jpg",".webp"))).filter(t=>!t.includes(a)).find(t=>m.existsSync(t));if(n){const t=o.normalize(n);return i.galleries.find(c=>t.includes(o.normalize(c)))||null}return null}function O(e,a){let i=`Hajaniaina Rafaliarintsoa ${a}`;return e.DigitalCreationDate&&(i+=` ${e.DigitalCreationDate}`),i}async function S(e,a,i){console.log(`Reducing image size of ${e}`),console.log(`Destination: ${a}`);const r={gravity:"southeast"},{width:n,height:t}=await f(e);let s=!1;n&&t&&(s=t>n);const[c,l]=s?[i.optimizedSize?.height,i.optimizedSize?.width]:[i.optimizedSize?.width,i.optimizedSize?.height];try{const g=h(e).withMetadata({exif:{IFD0:{Copyright:i.copyright||new Date().getFullYear().toString()}}}).resize(c,l,{fit:h.fit.cover,kernel:h.kernel.lanczos3});!a.includes("home-")&&i.watermarkPath&&g.composite([{input:i.watermarkPath,...r}]),await g.toFile(a)}catch(g){console.error(`Failed to reduce image size of ${e}: ${g}`)}}async function b(e){console.log(`Deleting all files in ${e}`);const a=await m.promises.readdir(e);await Promise.all(a.map(async i=>{const r=o.join(e,i);await m.promises.unlink(r)}))}async function $(e){console.log(`Creating optimized directory in ${e}`);try{await m.promises.mkdir(o.join(e,"optimized"),{recursive:!0})}catch(a){if(a.code!=="EEXIST")throw console.error(`Failed to create directory ${e}: ${a}`),a}}async function v(e){console.log(`Creating thumbnails directory in ${e}`);try{await m.promises.mkdir(o.join(e,"thumbnails"),{recursive:!0})}catch(a){if(a.code!=="EEXIST")throw console.error(`Failed to create directory ${e}: ${a}`),a}}async function I(e,a,i){console.log(`Creating thumbnail for ${e}`);const{width:r,height:n}=await f(e);let t=!1;r&&n&&(t=n>r);const[s,c]=t?[null,i.thumbnailSize?.height]:[i.thumbnailSize?.width,null];return h(e).resize(s,c,{kernel:h.kernel.lanczos3,fit:h.fit.cover}).webp({quality:100}).toFile(a)}async function T(e,a,i){console.log(`Renaming files in ${a}`);const r=e.map(async n=>{const t=o.join(i.imagesDir,a,n);let s=n;i.cleanChars?.forEach(l=>{typeof l=="string"?s=s.replace(l,""):s=s.replace(l.char,l.replaceBy)});let c=o.join(i.imagesDir,a,s);s!==n&&m.existsSync(c)?(s=s.replace(".jpg","2.jpg"),c=o.join(i.imagesDir,a,s),await m.promises.rename(t,c)):await m.promises.rename(t,c)});return Promise.all(r)}async function C(e){await Promise.all(e.parentGalleries.map(async a=>{const r=await e.galleries.filter(t=>t.includes(a)).reduce(async(t,s)=>{const c=await t,l=o.join(e.imagesDir,s),g=JSON.parse(await m.promises.readFile(o.join(l,"images.json"),"utf8"));return e.privateGalleries.includes(s)&&g.forEach(u=>{delete u.thumbnailPath,delete u.path}),{...c,[s]:g}},Promise.resolve({})),n=Object.keys(r).reduce((t,s)=>{const c=r[s].find(l=>!l.portrait);return{...t,[s]:c}},{});await m.promises.writeFile(o.join(e.imagesDir,a,"cover-images.json"),JSON.stringify(n,null,2))}))}exports.createGalleries=D;
